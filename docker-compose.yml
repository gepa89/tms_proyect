version: '3.8'
services:
  # Kong API Gateway
  kong:
    image: kong:latest
    container_name: kong-gateway
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_PASSWORD: kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
    ports:
      - "8080:8000"  # Proxy port (for external access to Kong)
      - "8443:8443"  # Proxy SSL port
      - "9001:8001"  # Admin API port
      - "8444:8444"  # Admin SSL API port
    depends_on:
      - kong-db
    networks:
      - tms-network
    command: >
      /bin/sh -c "kong migrations bootstrap && kong start"

  # Kong PostgreSQL Database
  kong-db:
    image: postgres:13
    container_name: kong-db
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
    volumes:
      - kong-data:/var/lib/postgresql/data
    networks:
      - tms-network

  # Servicio de autenticación
  auth-service:
    build:
      context: ./auth
      dockerfile: Dockerfile
    container_name: tms-auth-app
    volumes:
      - ./auth/src:/var/www/html
      - ./auth/config/apache/000-default.conf:/etc/apache2/sites-available/000-default.conf
    networks:
      - tms-network
    environment:
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: auth_service
      MYSQL_USER: uauth
      MYSQL_PASSWORD: uauth123
    ports:
      - "8000:80"  # Puerto externo 8000, interno 80 (Apache)
    depends_on:
      - mysql

  # Servicio de gestión de vehículos
  vehicle-service:
    build:
      context: ./vehicle
      dockerfile: Dockerfile
    container_name: tms-vehicle-app
    volumes:
      - ./vehicle/src:/var/www/html
      - ./vehicle/config/apache/000-default.conf:/etc/apache2/sites-available/000-default.conf
    environment:
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: vehicle_service
      MYSQL_USER: uvehicle
      MYSQL_PASSWORD: vehicle123
    networks:
      - tms-network
    ports:
      - "8001:80"  # Puerto externo 8001, interno 80 (Apache)
    depends_on:
      - mysql

  # Servicio de gestión de conductores
  driver-service:
    build:
      context: ./driver
      dockerfile: Dockerfile
    container_name: tms-driver-app
    volumes:
      - ./driver/src:/var/www/html
      - ./driver/config/apache/000-default.conf:/etc/apache2/sites-available/000-default.conf
    environment:
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: driver_service
      MYSQL_USER: udriver
      MYSQL_PASSWORD: driver123
    networks:
      - tms-network
    ports:
      - "8002:80"  # Puerto externo 8002, interno 80 (Apache)
    depends_on:
      - mysql

  # Servicio de MySQL
  mysql:
    image: mysql:8.0
    container_name: tms-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - tms-network
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      retries: 3

networks:
  tms-network:
    name: tms-network
    driver: bridge

volumes:
  kong-data:
  db_data:

